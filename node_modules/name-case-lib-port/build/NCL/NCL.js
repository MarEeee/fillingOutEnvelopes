"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @license Dual licensed under the MIT or GPL Version 2 licenses.
 * @package NameCaseLib
 */

/**
 * Класс, который содержит основные константы библиотеки:
 * - индексы мужского и женского пола
 * - индексы всех падежей
 * 
 * @author Андрей Чайка <bymer3@gmail.com>
 * @version 0.4.1
 * @package NameCaseLib
 */
var NCL = function () {
  function NCL() {
    _classCallCheck(this, NCL);
  }

  _createClass(NCL, null, [{
    key: "getConcreteClass",
    value: function getConcreteClass(lang) {
      return NCL._concreteClasses && NCL._concreteClasses[lang] ? NCL._concreteClasses[lang] : null;
    }
  }, {
    key: "setConcreteClasses",
    value: function setConcreteClasses(concreteClasses) {
      NCL._concreteClasses = concreteClasses;
    }
  }, {
    key: "MAN",

    /**
     * Мужской пол
     * @static integer
     */
    get: function get() {
      return 1;
    }

    /**
     * Женский пол
     * @static integer 
     */

  }, {
    key: "WOMAN",
    get: function get() {
      return 2;
    }

    /**
     * Именительный падеж
     * @static integer 
     */

  }, {
    key: "IMENITLN",
    get: function get() {
      return 0;
    }

    /**
     * Родительный падеж
     * @static integer 
     */

  }, {
    key: "RODITLN",
    get: function get() {
      return 1;
    }

    /**
     * Дательный падеж
     * @static integer 
     */

  }, {
    key: "DATELN",
    get: function get() {
      return 2;
    }

    /**
     * Винительный падеж
     * @static integer 
     */

  }, {
    key: "VINITELN",
    get: function get() {
      return 3;
    }

    /**
     * Творительный падеж
     * @static integer 
     */

  }, {
    key: "TVORITELN",
    get: function get() {
      return 4;
    }

    /**
     * Предложный падеж
     * @static integer 
     */

  }, {
    key: "PREDLOGN",
    get: function get() {
      return 5;
    }

    /**
     * Назвиний відмінок
     * @static integer 
     */

  }, {
    key: "UaNazyvnyi",
    get: function get() {
      return 0;
    }

    /**
     * Родовий відмінок
     * @static integer 
     */

  }, {
    key: "UaRodovyi",
    get: function get() {
      return 1;
    }

    /**
     * Давальний відмінок
     * @static integer 
     */

  }, {
    key: "UaDavalnyi",
    get: function get() {
      return 2;
    }

    /**
     * Знахідний відмінок
     * @static integer 
     */

  }, {
    key: "UaZnahidnyi",
    get: function get() {
      return 3;
    }

    /**
     * Орудний відмінок
     * @static integer 
     */

  }, {
    key: "UaOrudnyi",
    get: function get() {
      return 4;
    }

    /**
     * Місцевий відмінок
     * @static integer 
     */

  }, {
    key: "UaMiszevyi",
    get: function get() {
      return 5;
    }

    /**
     * Кличний відмінок
     * @static integer 
     */

  }, {
    key: "UaKlychnyi",
    get: function get() {
      return 6;
    }
  }]);

  return NCL;
}();

exports.default = NCL;